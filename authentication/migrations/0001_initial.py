# Generated by Django 5.0.3 on 2024-05-31 03:58

import authentication.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("department", "0002_speciality"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserAuthentication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("username", models.CharField(default="", max_length=150, unique=True)),
                ("first_name", models.CharField(default="", max_length=150)),
                ("last_name", models.CharField(default="", max_length=150)),
                ("email", models.EmailField(default="", max_length=254, unique=True)),
                ("role", models.CharField(default="", max_length=12)),
                ("gender", models.CharField(default="", max_length=12)),
                ("designation", models.CharField(max_length=100, null=True)),
                (
                    "phone_number",
                    models.CharField(default="", max_length=15, unique=True),
                ),
                ("address", models.CharField(max_length=150, null=True)),
                ("date_of_birth", models.DateField(max_length=15, null=True)),
                ("joining_date", models.DateField(max_length=15, null=True)),
                ("about", models.TextField(default="", null=True)),
                ("language_known", models.TextField(default="", null=True)),
                ("education", models.TextField(default="", null=True)),
                ("experience", models.CharField(default="", max_length=100, null=True)),
                ("img", models.FileField(default="", upload_to="uploads/")),
                ("account_status", models.CharField(max_length=10, null=True)),
                ("is_superuser", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(null=True)),
                ("location", models.CharField(max_length=255, null=True)),
                ("linkedin", models.TextField(default="", max_length=100, null=True)),
                ("license_no", models.CharField(default="", max_length=100, null=True)),
                ("emp_id", models.CharField(default="", max_length=10, null=True)),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designation_data",
                        to="department.department",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", authentication.models.ManageAccount()),
            ],
        ),
    ]
